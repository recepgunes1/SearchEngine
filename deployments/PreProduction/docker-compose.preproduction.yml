networks:
  backend:

volumes: 
  urlregister.database_data:
  pagedownloader.database_data:
  urlextractor.database_data:
  tagextractor.database_data:
  elasticsearch_data:
  rabbitmq_data:

services:
  urlregister.database:
    image: searchengine/urlregister.database
    build:
      context: ./deployments/Scripts/UrlRegister
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123.
      POSTGRES_DB: UrlRegister
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend
    volumes:
      - urlregister.database_data:/var/lib/postgresql/data

  pagedownloader.database:
    image: searchengine/pagedownloader.database
    build:
      context: ./deployments/Scripts/PageDownloader
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123.
      POSTGRES_DB: PageDownloader
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend
    volumes:
      - pagedownloader.database_data:/var/lib/postgresql/data

  urlextractor.database:
    image: searchengine/urlextractor.database
    build:
      context: ./deployments/Scripts/UrlExtractor
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123.
      POSTGRES_DB: UrlExtractor
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend
    volumes:
      - urlextractor.database_data:/var/lib/postgresql/data

  tagextractor.database:
    image: searchengine/tagextractor.database
    build:
      context: ./deployments/Scripts/TagExtractor
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123.
      POSTGRES_DB: TagExtractor
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend
    volumes:
      - tagextractor.database_data:/var/lib/postgresql/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    networks:
      - backend
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: always

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - backend
  
  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.11.1
    privileged: true
    user: root
    volumes:
      - ./deployments/Scripts/Metricbeat/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
    depends_on:
      - elasticsearch
      - kibana
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    networks:
      - backend
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  searchhub.webapi:
    deploy:
      mode: replicated
      replicas: 2

  pagedownloader.worker:
    deploy:
      mode: replicated
      replicas: 2

  tagextractor.worker:
    deploy:
      mode: replicated
      replicas: 2

  urlextractor.worker:
    deploy:
      mode: replicated
      replicas: 2

  client.webapp:
    ports:
      - "8080:8080"
      - "8081:8081"
