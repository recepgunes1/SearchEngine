networks:
  backend:

services:
  urlregister.database:
    image: searchengine/urlregister.database
    build:
      context: ./deployments/Scripts/UrlRegister
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123.
      POSTGRES_DB: UrlRegister
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend

  pagedownloader.database:
    image: searchengine/pagedownloader.database
    build:
      context: ./deployments/Scripts/PageDownloader
      dockerfile: Dockerfile
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123.
      POSTGRES_DB: PageDownloader
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend

  urlextractor.database:
    image: searchengine/urlextractor.database
    build:
      context: ./deployments/Scripts/UrlExtractor
      dockerfile: Dockerfile
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123.
      POSTGRES_DB: UrlExtractor
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend

  tagextractor.database:
    image: searchengine/tagextractor.database
    build:
      context: ./deployments/Scripts/TagExtractor
      dockerfile: Dockerfile
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password123.
      POSTGRES_DB: TagExtractor
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - backend

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - backend
    
  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

  gateway.webapi:
    ports:
      - "5010:8080"
      - "5011:8081"

  urlregister.webapi:
    ports:
      - "5020:8080"
      - "5021:8081"

  searchhub.webapi:
    ports:
      - "5030:8080"
      - "5031:8081"

  client.webapp:
    ports:
      - "8080:8080"
      - "8081:8081"
