@page "/"
@page "/Search"
@using WebApp.Services
@inject NavigationManager NavManager
@rendermode InteractiveServer
@inject IHttpClientService HttpClientService

<div class="row justify-content-center align-items-center m-5">
    <div class="col-9 text-center bg-light border border-1 rounded shadow p-5">
        <h1 class="h1 mb-5"> WebApp </h1>

        <!-- Enclose input and suggestions in a common div -->
        <div class="w-100">
            <input type="text" class="form-control" @bind="inputText" @oninput="GetSuggestions" placeholder="Search">
            @if (Suggestions.Count > 0)
            {
                <ul class="list-group mt-3 text-start">
                    @foreach (var suggestion in Suggestions)
                    {
                        <li class="list-group-item suggestion-item" @onclick="@(() => { inputText = suggestion; Suggestions = new List<string>(); })">@suggestion</li>
                    }
                </ul>
            }
        </div>

        <div class="mt-4">
            <button class="btn btn-primary" @onclick="SearchInput">Search</button>
            <button class="btn btn-warning" @onclick="FeelLuck">I'm Feeling Lucky</button>
        </div>
    </div>
</div>

@code {
    private string inputText = string.Empty;
    private List<string> Suggestions = new();

    private void SearchInput()
    {
        if (!string.IsNullOrWhiteSpace(inputText))
        {
            NavManager.NavigateTo($"/result?input={inputText}&page=1&pageSize=10");
        }
    }

    private async Task FeelLuck()
    {
        if (!string.IsNullOrEmpty(inputText) && !string.IsNullOrWhiteSpace(inputText))
        {
            var target = await HttpClientService.GetLuckyUrl(inputText);
            if (!string.IsNullOrEmpty(target) && !string.IsNullOrWhiteSpace(target))
            {
                NavManager.NavigateTo(target);
            }
        }
    }

    private async Task GetSuggestions(ChangeEventArgs e)
    {
        inputText = e.Value?.ToString() ?? string.Empty;

        if (!string.IsNullOrEmpty(inputText) && !string.IsNullOrWhiteSpace(inputText))
        {
            Suggestions = await HttpClientService.GetSuggestions(inputText);
        }

        else
        {
            Suggestions = new List<string>();
        }
    }

}